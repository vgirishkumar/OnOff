/**
 * generated by Xtext 2.13.0
 */
package com.visteon.onoff.states.impl;

import com.visteon.onoff.coom.State;

import com.visteon.onoff.states.ComponentState;
import com.visteon.onoff.states.FeatureDependency;
import com.visteon.onoff.states.StateDependency;
import com.visteon.onoff.states.StatesPackage;
import com.visteon.onoff.states.TransitionDependency;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component State</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.visteon.onoff.states.impl.ComponentStateImpl#getState <em>State</em>}</li>
 *   <li>{@link com.visteon.onoff.states.impl.ComponentStateImpl#getStateDependencies <em>State Dependencies</em>}</li>
 *   <li>{@link com.visteon.onoff.states.impl.ComponentStateImpl#getFeatureDependencies <em>Feature Dependencies</em>}</li>
 *   <li>{@link com.visteon.onoff.states.impl.ComponentStateImpl#getTransitionDependencies <em>Transition Dependencies</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentStateImpl extends MinimalEObjectImpl.Container implements ComponentState
{
  /**
   * The cached value of the '{@link #getState() <em>State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getState()
   * @generated
   * @ordered
   */
  protected State state;

  /**
   * The cached value of the '{@link #getStateDependencies() <em>State Dependencies</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateDependencies()
   * @generated
   * @ordered
   */
  protected StateDependency stateDependencies;

  /**
   * The cached value of the '{@link #getFeatureDependencies() <em>Feature Dependencies</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatureDependencies()
   * @generated
   * @ordered
   */
  protected FeatureDependency featureDependencies;

  /**
   * The cached value of the '{@link #getTransitionDependencies() <em>Transition Dependencies</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransitionDependencies()
   * @generated
   * @ordered
   */
  protected TransitionDependency transitionDependencies;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentStateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StatesPackage.Literals.COMPONENT_STATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State getState()
  {
    if (state != null && state.eIsProxy())
    {
      InternalEObject oldState = (InternalEObject)state;
      state = (State)eResolveProxy(oldState);
      if (state != oldState)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StatesPackage.COMPONENT_STATE__STATE, oldState, state));
      }
    }
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State basicGetState()
  {
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setState(State newState)
  {
    State oldState = state;
    state = newState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__STATE, oldState, state));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDependency getStateDependencies()
  {
    return stateDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStateDependencies(StateDependency newStateDependencies, NotificationChain msgs)
  {
    StateDependency oldStateDependencies = stateDependencies;
    stateDependencies = newStateDependencies;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES, oldStateDependencies, newStateDependencies);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStateDependencies(StateDependency newStateDependencies)
  {
    if (newStateDependencies != stateDependencies)
    {
      NotificationChain msgs = null;
      if (stateDependencies != null)
        msgs = ((InternalEObject)stateDependencies).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES, null, msgs);
      if (newStateDependencies != null)
        msgs = ((InternalEObject)newStateDependencies).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES, null, msgs);
      msgs = basicSetStateDependencies(newStateDependencies, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES, newStateDependencies, newStateDependencies));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeatureDependency getFeatureDependencies()
  {
    return featureDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFeatureDependencies(FeatureDependency newFeatureDependencies, NotificationChain msgs)
  {
    FeatureDependency oldFeatureDependencies = featureDependencies;
    featureDependencies = newFeatureDependencies;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES, oldFeatureDependencies, newFeatureDependencies);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFeatureDependencies(FeatureDependency newFeatureDependencies)
  {
    if (newFeatureDependencies != featureDependencies)
    {
      NotificationChain msgs = null;
      if (featureDependencies != null)
        msgs = ((InternalEObject)featureDependencies).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES, null, msgs);
      if (newFeatureDependencies != null)
        msgs = ((InternalEObject)newFeatureDependencies).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES, null, msgs);
      msgs = basicSetFeatureDependencies(newFeatureDependencies, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES, newFeatureDependencies, newFeatureDependencies));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TransitionDependency getTransitionDependencies()
  {
    return transitionDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTransitionDependencies(TransitionDependency newTransitionDependencies, NotificationChain msgs)
  {
    TransitionDependency oldTransitionDependencies = transitionDependencies;
    transitionDependencies = newTransitionDependencies;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES, oldTransitionDependencies, newTransitionDependencies);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTransitionDependencies(TransitionDependency newTransitionDependencies)
  {
    if (newTransitionDependencies != transitionDependencies)
    {
      NotificationChain msgs = null;
      if (transitionDependencies != null)
        msgs = ((InternalEObject)transitionDependencies).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES, null, msgs);
      if (newTransitionDependencies != null)
        msgs = ((InternalEObject)newTransitionDependencies).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES, null, msgs);
      msgs = basicSetTransitionDependencies(newTransitionDependencies, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES, newTransitionDependencies, newTransitionDependencies));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES:
        return basicSetStateDependencies(null, msgs);
      case StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES:
        return basicSetFeatureDependencies(null, msgs);
      case StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES:
        return basicSetTransitionDependencies(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_STATE__STATE:
        if (resolve) return getState();
        return basicGetState();
      case StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES:
        return getStateDependencies();
      case StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES:
        return getFeatureDependencies();
      case StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES:
        return getTransitionDependencies();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_STATE__STATE:
        setState((State)newValue);
        return;
      case StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES:
        setStateDependencies((StateDependency)newValue);
        return;
      case StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES:
        setFeatureDependencies((FeatureDependency)newValue);
        return;
      case StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES:
        setTransitionDependencies((TransitionDependency)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_STATE__STATE:
        setState((State)null);
        return;
      case StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES:
        setStateDependencies((StateDependency)null);
        return;
      case StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES:
        setFeatureDependencies((FeatureDependency)null);
        return;
      case StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES:
        setTransitionDependencies((TransitionDependency)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_STATE__STATE:
        return state != null;
      case StatesPackage.COMPONENT_STATE__STATE_DEPENDENCIES:
        return stateDependencies != null;
      case StatesPackage.COMPONENT_STATE__FEATURE_DEPENDENCIES:
        return featureDependencies != null;
      case StatesPackage.COMPONENT_STATE__TRANSITION_DEPENDENCIES:
        return transitionDependencies != null;
    }
    return super.eIsSet(featureID);
  }

} //ComponentStateImpl
