/**
 * generated by Xtext 2.13.0
 */
package com.visteon.onoff.states.impl;

import com.visteon.onoff.coom.State;

import com.visteon.onoff.states.StateDependency;
import com.visteon.onoff.states.StatesPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>State Dependency</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.visteon.onoff.states.impl.StateDependencyImpl#getStateDependeny <em>State Dependeny</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StateDependencyImpl extends MinimalEObjectImpl.Container implements StateDependency
{
  /**
   * The cached value of the '{@link #getStateDependeny() <em>State Dependeny</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateDependeny()
   * @generated
   * @ordered
   */
  protected State stateDependeny;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateDependencyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StatesPackage.Literals.STATE_DEPENDENCY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State getStateDependeny()
  {
    if (stateDependeny != null && stateDependeny.eIsProxy())
    {
      InternalEObject oldStateDependeny = (InternalEObject)stateDependeny;
      stateDependeny = (State)eResolveProxy(oldStateDependeny);
      if (stateDependeny != oldStateDependeny)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StatesPackage.STATE_DEPENDENCY__STATE_DEPENDENY, oldStateDependeny, stateDependeny));
      }
    }
    return stateDependeny;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State basicGetStateDependeny()
  {
    return stateDependeny;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStateDependeny(State newStateDependeny)
  {
    State oldStateDependeny = stateDependeny;
    stateDependeny = newStateDependeny;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.STATE_DEPENDENCY__STATE_DEPENDENY, oldStateDependeny, stateDependeny));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StatesPackage.STATE_DEPENDENCY__STATE_DEPENDENY:
        if (resolve) return getStateDependeny();
        return basicGetStateDependeny();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StatesPackage.STATE_DEPENDENCY__STATE_DEPENDENY:
        setStateDependeny((State)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StatesPackage.STATE_DEPENDENCY__STATE_DEPENDENY:
        setStateDependeny((State)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StatesPackage.STATE_DEPENDENCY__STATE_DEPENDENY:
        return stateDependeny != null;
    }
    return super.eIsSet(featureID);
  }

} //StateDependencyImpl
