/**
 * generated by Xtext 2.13.0
 */
package com.visteon.onoff.states.impl;

import com.visteon.onoff.coom.Transition;

import com.visteon.onoff.states.ComponentTransition;
import com.visteon.onoff.states.StatesPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component Transition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.visteon.onoff.states.impl.ComponentTransitionImpl#getTransition <em>Transition</em>}</li>
 *   <li>{@link com.visteon.onoff.states.impl.ComponentTransitionImpl#getTimeoutInMilliseconds <em>Timeout In Milliseconds</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentTransitionImpl extends MinimalEObjectImpl.Container implements ComponentTransition
{
  /**
   * The cached value of the '{@link #getTransition() <em>Transition</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransition()
   * @generated
   * @ordered
   */
  protected Transition transition;

  /**
   * The default value of the '{@link #getTimeoutInMilliseconds() <em>Timeout In Milliseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeoutInMilliseconds()
   * @generated
   * @ordered
   */
  protected static final int TIMEOUT_IN_MILLISECONDS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getTimeoutInMilliseconds() <em>Timeout In Milliseconds</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeoutInMilliseconds()
   * @generated
   * @ordered
   */
  protected int timeoutInMilliseconds = TIMEOUT_IN_MILLISECONDS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentTransitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StatesPackage.Literals.COMPONENT_TRANSITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transition getTransition()
  {
    if (transition != null && transition.eIsProxy())
    {
      InternalEObject oldTransition = (InternalEObject)transition;
      transition = (Transition)eResolveProxy(oldTransition);
      if (transition != oldTransition)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StatesPackage.COMPONENT_TRANSITION__TRANSITION, oldTransition, transition));
      }
    }
    return transition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transition basicGetTransition()
  {
    return transition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTransition(Transition newTransition)
  {
    Transition oldTransition = transition;
    transition = newTransition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_TRANSITION__TRANSITION, oldTransition, transition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getTimeoutInMilliseconds()
  {
    return timeoutInMilliseconds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTimeoutInMilliseconds(int newTimeoutInMilliseconds)
  {
    int oldTimeoutInMilliseconds = timeoutInMilliseconds;
    timeoutInMilliseconds = newTimeoutInMilliseconds;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StatesPackage.COMPONENT_TRANSITION__TIMEOUT_IN_MILLISECONDS, oldTimeoutInMilliseconds, timeoutInMilliseconds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_TRANSITION__TRANSITION:
        if (resolve) return getTransition();
        return basicGetTransition();
      case StatesPackage.COMPONENT_TRANSITION__TIMEOUT_IN_MILLISECONDS:
        return getTimeoutInMilliseconds();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_TRANSITION__TRANSITION:
        setTransition((Transition)newValue);
        return;
      case StatesPackage.COMPONENT_TRANSITION__TIMEOUT_IN_MILLISECONDS:
        setTimeoutInMilliseconds((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_TRANSITION__TRANSITION:
        setTransition((Transition)null);
        return;
      case StatesPackage.COMPONENT_TRANSITION__TIMEOUT_IN_MILLISECONDS:
        setTimeoutInMilliseconds(TIMEOUT_IN_MILLISECONDS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StatesPackage.COMPONENT_TRANSITION__TRANSITION:
        return transition != null;
      case StatesPackage.COMPONENT_TRANSITION__TIMEOUT_IN_MILLISECONDS:
        return timeoutInMilliseconds != TIMEOUT_IN_MILLISECONDS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (timeoutInMilliseconds: ");
    result.append(timeoutInMilliseconds);
    result.append(')');
    return result.toString();
  }

} //ComponentTransitionImpl
