/**
 * generated by Xtext 2.13.0
 */
package com.visteon.onoff.validation;

import com.visteon.onoff.coom.CoomPackage;
import com.visteon.onoff.validation.AbstractCoomValidator;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class CoomValidator extends AbstractCoomValidator {
  @Check
  public void checkForMultipleInitialStates(final com.visteon.onoff.coom.State state) {
    boolean _isInitial = state.isInitial();
    if (_isInitial) {
      final Function1<com.visteon.onoff.coom.State, Boolean> _function = (com.visteon.onoff.coom.State it) -> {
        return Boolean.valueOf(it.isInitial());
      };
      int _size = IterableExtensions.size(IterableExtensions.<com.visteon.onoff.coom.State>filter(EcoreUtil2.<com.visteon.onoff.coom.State>getSiblingsOfType(state, com.visteon.onoff.coom.State.class), _function));
      boolean _greaterThan = (_size > 0);
      if (_greaterThan) {
        this.error("A component cannot have multiple start States", CoomPackage.Literals.STATE__INITIAL);
      }
    }
  }
}
